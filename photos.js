// ==========================
// –ì–ê–õ–ï–†–ï–Ø
// ==========================
const photos = [
  { title: "–î–≤–æ—Ä–æ–≤–∞—è —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è –ø–æ –∞–¥—Ä–µ—Å—É: –ü—É—Ç–µ–≤–æ–π –ø—Ä. 38", img: "school_modern.png", status: "–ü—Ä–æ–≤–µ—Ä–µ–Ω–æ", statusClass: "status-checked" },
  { title: "–î–≤–æ—Ä–æ–≤–∞—è —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è –ø–æ –∞–¥—Ä–µ—Å—É: –§–ª–æ—Ç—Å–∫–∞—è —É–ª. 54, 58 –∫.1", img: "office_building.png", status: "–û–∂–∏–¥–∞—é—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏", statusClass: "status-pending" },
  { title: "–î–≤–æ—Ä–æ–≤–∞—è —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è –ø–æ –∞–¥—Ä–µ—Å—É: –ö–∞—Ä–≥–æ–ø–æ–ª—å—Å–∫–∞—è —É–ª. 18", img: "metro_yug.png", status: "–ü—Ä–æ–≤–µ—Ä–µ–Ω–æ", statusClass: "status-checked" },
  { title: "–î–≤–æ—Ä–æ–≤–∞—è —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è –ø–æ –∞–¥—Ä–µ—Å—É: –ë–µ—Å—Ç—É–∂–µ–≤—ã—Ö —É–ª. 27–ê", img: "park_central.png", status: "–ü—Ä–æ–±–ª–µ–º–Ω—ã–µ", statusClass: "status-problem" },
  { title: "–î–≤–æ—Ä–æ–≤–∞—è —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è –ø–æ –∞–¥—Ä–µ—Å—É: –ß–µ–ª–æ–±–∏—Ç—å–µ–≤—Å–∫–æ–µ —à–æ—Å—Å–µ 14 –∫.3, 14 –∫.4, 14 –∫.5", img: "kindergarten_12.png", status: "–û–∂–∏–¥–∞—é—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏", statusClass: "status-pending" },
  { title: "–î–≤–æ—Ä–æ–≤–∞—è —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è –ø–æ –∞–¥—Ä–µ—Å—É: –ú–∏—Ä–∞ –ø—Ä–æ—Å–ø. 194", img: "residential_lesnaya.png", status: "–ü—Ä–æ–≤–µ—Ä–µ–Ω–æ", statusClass: "status-checked" }
];

const gallery = document.getElementById("gallery");

const searchInput = document.getElementById("searchInput");
const statusFilter = document.getElementById("statusFilter");

function renderGallery(filterText = "", status = "") {
  gallery.innerHTML = "";

  const filteredPhotos = photos.filter(({ title, status: s }) => {
    const matchesSearch = title.toLowerCase().includes(filterText.toLowerCase());
    const matchesStatus = !status || s === status;
    return matchesSearch && matchesStatus;
  });

  filteredPhotos.forEach(({ title, img, status, statusClass }) => {
    const card = document.createElement("div");
    card.className = "card";
    card.innerHTML = `
      <img src="images/${img}" alt="${title}" />
      <div class="card-content">
        <div class="card-title">${title}</div>
        <div class="card-status ${statusClass}">${status}</div>
        <div class="card-actions">
          <button>–û—Ç–∫—Ä—ã—Ç—å</button>
        </div>
      </div>
    `;
    gallery.appendChild(card);
  });
}



// –°–ª—É—à–∞—Ç–µ–ª–∏ —Å–æ–±—ã—Ç–∏–π
searchInput.addEventListener("input", () => {
  renderGallery(searchInput.value, statusFilter.value);
});

statusFilter.addEventListener("change", () => {
  renderGallery(searchInput.value, statusFilter.value);
});

// –ü–µ—Ä–≤–∞—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∞
filteredPhotos.forEach(({ title, img, status, statusClass }) => {
  const card = document.createElement("div");
  card.className = "card";
  card.innerHTML = `
    <img src="images/${img}" alt="${title}" />
    <div class="card-content">
      <div class="card-title">${title}</div>
      <div class="card-status ${statusClass}">${status}</div>
      <div class="card-actions">
        <button>–û—Ç–∫—Ä—ã—Ç—å</button>
      </div>
    </div>
  `;

  // üì∏ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ ‚Äî –∑–∞–ø—É—Å–∫ –º–æ–¥–∞–ª–∫–∏
  const index = photos.findIndex(p => p.img === img);
  card.addEventListener("click", () => openPhotoModal(index));

  gallery.appendChild(card);
});



// ==========================
// –ú–û–î–ê–õ–ö–ò
// ==========================
function createModal(id, title, contentHTML) {
  const modal = document.createElement("div");
  modal.id = id;
  modal.className = "modal";
  modal.innerHTML = `
    <div class="modal-content">
      <div class="modal-header">
        <h3>${title}</h3>
        <span class="modal-close" data-close="${id}">&times;</span>
      </div>
      <div class="modal-body">${contentHTML}</div>
      <div class="modal-footer">
        <button>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
      </div>
    </div>
  `;
  document.body.appendChild(modal);
}


createModal("addModal", "–î–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ", `
  <label>–§–æ—Ç–æ:</label>
  <input type="file" accept="image/*" />

  <label>–û–ø–∏—Å–∞–Ω–∏–µ:</label>
  <textarea rows="2" placeholder="–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ñ–æ—Ç–æ"></textarea>

  <label>–ñ—É—Ä–Ω–∞–ª:</label>
  <select disabled>
    <option value="">–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏</option>
  </select>

  <div style="display: flex; gap: 10px; margin-top: 10px;">
    <div style="flex: 1;">
      <label>–®–∏—Ä–æ—Ç–∞:</label>
      <input type="text" disabled placeholder="..." />
    </div>
    <div style="flex: 1;">
      <label>–î–æ–ª–≥–æ—Ç–∞:</label>
      <input type="text" disabled placeholder="..." />
    </div>
    <div style="flex: 1;">
      <label>–¢–æ—á–Ω–æ—Å—Ç—å (–º):</label>
      <input type="text" disabled placeholder="..." />
    </div>
  </div>
`);



// ==========================
// –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ú–û–î–ê–õ–û–ö
// ==========================

document.getElementById("openAddModal").addEventListener("click", () => {
  document.getElementById("addModal").style.display = "flex";
});

document.addEventListener("click", (e) => {
  if (e.target.matches(".modal-close")) {
    const id = e.target.dataset.close;
    document.getElementById(id).style.display = "none";
  }
});


// ==========================
// –§–û–¢–û-–ú–û–î–ê–õ–ö–ê (—Ä–∞–±–æ—á–∞—è)
// ==========================

const photoModal = document.getElementById("photoModal");
const sliderImg = document.getElementById("sliderImg");
const closePhotoModal = document.getElementById("closePhotoModal");
const prevSlide = document.getElementById("prevSlide");
const nextSlide = document.getElementById("nextSlide");

let currentPhotoIndex = 0;

// –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª–∫–∏ –ø–æ –∏–Ω–¥–µ–∫—Å—É —Ñ–æ—Ç–æ
function openPhotoModal(index) {
  currentPhotoIndex = index;
  updatePhoto();
  photoModal.style.display = "flex";
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –º–æ–¥–∞–ª–∫–µ
function updatePhoto() {
  const photo = photos[currentPhotoIndex];
  sliderImg.src = `images/${photo.img}`;
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª–∫–∏
closePhotoModal.addEventListener("click", () => {
  photoModal.style.display = "none";
});

// –°—Ç—Ä–µ–ª–∫–∞ ‚Üê
prevSlide.addEventListener("click", () => {
  if (currentPhotoIndex > 0) {
    currentPhotoIndex--;
    updatePhoto();
  }
});

// –°—Ç—Ä–µ–ª–∫–∞ ‚Üí
nextSlide.addEventListener("click", () => {
  if (currentPhotoIndex < photos.length - 1) {
    currentPhotoIndex++;
    updatePhoto();
  }
});

